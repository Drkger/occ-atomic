// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SlideDown matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SlideDown
    classes={
      Object {
        "button": "button",
        "content": "content",
        "dot": "dot",
        "hide": "hide",
        "show": "show",
      }
    }
    expanded={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="button"
          onClick={[Function]}
        >
          <Jss(Flexbox)
            alignItems="center"
            display="flex"
            justifyContent="between"
          >
            <Jss(Title)
              className=""
              h={4}
            />
            <Jss(Icon)
              colors={
                Array [
                  "#a7a7a7",
                ]
              }
              iconName="arrowDown"
              style={
                Object {
                  "transform": "",
                }
              }
            />
          </Jss(Flexbox)>
        </div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Jss(Flexbox)
            alignItems="center"
            display="flex"
            justifyContent="between"
          >
            <Jss(Title)
              className=""
              h={4}
            />
            <Jss(Icon)
              colors={
                Array [
                  "#a7a7a7",
                ]
              }
              iconName="arrowDown"
              style={
                Object {
                  "transform": "",
                }
              }
            />
          </Jss(Flexbox)>,
          "className": "button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "center",
            "children": Array [
              <Jss(Title)
                className=""
                h={4}
              />,
              <Jss(Icon)
                colors={
                  Array [
                    "#a7a7a7",
                  ]
                }
                iconName="arrowDown"
                style={
                  Object {
                    "transform": "",
                  }
                }
              />,
            ],
            "display": "flex",
            "justifyContent": "between",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "className": "",
                "h": 4,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "colors": Array [
                  "#a7a7a7",
                ],
                "iconName": "arrowDown",
                "style": Object {
                  "transform": "",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="button"
            onClick={[Function]}
          >
            <Jss(Flexbox)
              alignItems="center"
              display="flex"
              justifyContent="between"
            >
              <Jss(Title)
                className=""
                h={4}
              />
              <Jss(Icon)
                colors={
                  Array [
                    "#a7a7a7",
                  ]
                }
                iconName="arrowDown"
                style={
                  Object {
                    "transform": "",
                  }
                }
              />
            </Jss(Flexbox)>
          </div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Jss(Flexbox)
              alignItems="center"
              display="flex"
              justifyContent="between"
            >
              <Jss(Title)
                className=""
                h={4}
              />
              <Jss(Icon)
                colors={
                  Array [
                    "#a7a7a7",
                  ]
                }
                iconName="arrowDown"
                style={
                  Object {
                    "transform": "",
                  }
                }
              />
            </Jss(Flexbox)>,
            "className": "button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alignItems": "center",
              "children": Array [
                <Jss(Title)
                  className=""
                  h={4}
                />,
                <Jss(Icon)
                  colors={
                    Array [
                      "#a7a7a7",
                    ]
                  }
                  iconName="arrowDown"
                  style={
                    Object {
                      "transform": "",
                    }
                  }
                />,
              ],
              "display": "flex",
              "justifyContent": "between",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "className": "",
                  "h": 4,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "colors": Array [
                    "#a7a7a7",
                  ],
                  "iconName": "arrowDown",
                  "style": Object {
                    "transform": "",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SlideDownJSS matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(SlideDown)
    expanded={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "button": "SlideDown-button-0-1-1",
        "content": "SlideDown-content-0-1-2",
        "dot": "SlideDown-dot-0-1-5",
        "hide": "SlideDown-hide-0-1-3",
        "show": "SlideDown-show-0-1-4",
      },
      "expanded": false,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "button": "SlideDown-button-0-1-1",
          "content": "SlideDown-content-0-1-2",
          "dot": "SlideDown-dot-0-1-5",
          "hide": "SlideDown-hide-0-1-3",
          "show": "SlideDown-show-0-1-4",
        },
        "expanded": false,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
