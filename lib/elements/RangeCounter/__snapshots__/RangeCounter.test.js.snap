// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RangeCounter matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RangeCounter
    classes={
      Object {
        "cont": "cont",
        "num": "num",
      }
    }
    max={10}
    min={1}
    of="/"
    symbol=" - "
    total={100}
    type=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="num"
        >
          1
           - 
          10
        </span>,
        " ",
        "/",
        " ",
        "100",
        " ",
        "",
      ],
      "className": "cont",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "1",
            " - ",
            "10",
          ],
          "className": "num",
        },
        "ref": null,
        "rendered": Array [
          "1",
          " - ",
          "10",
        ],
        "type": "span",
      },
      " ",
      "/",
      " ",
      "100",
      " ",
      "",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="num"
          >
            1
             - 
            10
          </span>,
          " ",
          "/",
          " ",
          "100",
          " ",
          "",
        ],
        "className": "cont",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "1",
              " - ",
              "10",
            ],
            "className": "num",
          },
          "ref": null,
          "rendered": Array [
            "1",
            " - ",
            "10",
          ],
          "type": "span",
        },
        " ",
        "/",
        " ",
        "100",
        " ",
        "",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`RangeCounterJSS matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(RangeCounter)
    max={10}
    min={1}
    of="/"
    symbol=" - "
    total={100}
    type=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "cont": "RangeCounter-cont-0-1-1",
        "num": "RangeCounter-num-0-1-2",
      },
      "max": 10,
      "min": 1,
      "of": "/",
      "symbol": " - ",
      "total": 100,
      "type": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "cont": "RangeCounter-cont-0-1-1",
          "num": "RangeCounter-num-0-1-2",
        },
        "max": 10,
        "min": 1,
        "of": "/",
        "symbol": " - ",
        "total": 100,
        "type": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
